#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
% Comandos para escrever BibTeX e BibLaTeX com a grafia esperada.
\newcommand{\bibtex}{\textsc{Bib}\negthinspace\TeX\space}
\newcommand{\biblatex}{\textsc{Bib}\LaTeX}

% For controling section formatting.
\usepackage{sectsty,textcase}
\sectionfont{\normalfont\normalsize\bfseries\MakeTextUppercase}
\subsectionfont{\normalfont\normalsize\MakeTextUppercase}
\subsubsectionfont{\normalfont\normalsize\bfseries}

% Use to align "Folha de Rosto"
\usepackage{changepage}
\usepackage{ragged2e}
\usepackage{hyphenat}

% position page number on the header, at right.
\usepackage{fancyhdr}
\renewcommand{\headrulewidth}{0pt}
\lhead{}
\rhead{\thepage}
\cfoot{}
\fancypagestyle{empty}{\fancyhf{}}
\fancypagestyle{plain}{\fancyhf{}}

% Align Table and Figure "captions"
\usepackage[singlelinecheck=false]{caption}

% Cria ambiente para citacoes longas.
\newenvironment{citacao}%
{ \par\addvspace{\baselineskip}%
   \footnotesize%
   \begin{adjustwidth}{40mm}{0cm}}%
{\end{adjustwidth}\addvspace{\baselineskip}\par}

% Configure TOC
\usepackage{tocloft,etoolbox}
%% Fixes capitalization for Section and Subsection.
\patchcmd{\l@section}{#1}{\MakeUppercase{#1}}{}{}
\patchcmd{\l@subsection}{#1}{\MakeUppercase{#1}}{}{}
%% Hide page numbers no TOC, LOT and LOF
\renewcommand{\cftaftertoctitle}{\thispagestyle{empty}}
\renewcommand{\cftafterloftitle}{\thispagestyle{empty}} 
\renewcommand{\cftafterlottitle}{\thispagestyle{empty}}
%%  Fixes TOC, LOT and LOF  title font
\renewcommand{\cfttoctitlefont}{\hfill\bfseries\MakeUppercase}
\renewcommand{\cftaftertoctitle}{\hfill}
\renewcommand{\cftlottitlefont}{\hfill\bfseries\MakeUppercase}
\renewcommand{\cftafterlottitle}{\hfill}
\renewcommand{\cftloftitlefont}{\hfill\bfseries\MakeUppercase}
\renewcommand{\cftafterloftitle}{\hfill}

%% Fixes description in LOT and LOF
\renewcommand{\cftfigfont}{Figura }
\renewcommand{\cfttabfont}{Tabela }

%% Fixes subsubsection font
\renewcommand{\cftsubsubsecfont}{\bfseries}

%% Fixes identation on TOC
\cftsetindents{subsec}{0cm}{1.25cm}
\cftsetindents{sec}{0cm}{1.25cm}
\cftsetindents{subsubsec}{0cm}{1.25cm}
\cftsetindents{fig}{0cm}{1.25cm}
\cftsetindents{tab}{0cm}{1.25cm}
%% Hide 'dots' on TOC, LOF and LOT.
\renewcommand{\cftfigdotsep}{\cftnodots}
\renewcommand{\cfttabdotsep}{\cftnodots}
\renewcommand{\cftsecdotsep}{\cftnodots}
\renewcommand{\cftsubsecdotsep}{\cftnodots}
\renewcommand{\cftsubsubsecdotsep}{\cftnodots}
%% Fixes separation between sections.
\renewcommand{\cftbeforesecskip}{0em}

% Add up to subsubsection to TOC 
\setcounter{tocdepth}{3}

% fix abstract title font
\usepackage{abstract}
\renewcommand{\abstractnamefont}{\normalfont\normalsize\bfseries\MakeUppercase}

% Used to colorize table cells
\usepackage[usenames,dvipsnames]{xcolor}
\usepackage{colortbl}

% Fix item names
\usepackage[brazilian]{babel}
\addto{\captionsbrazilian}{\renewcommand{\listfigurename}{Lista de Ilustrações}}

% Fix identation of first paragraph
\usepackage{indentfirst}

% Fixes footnote alignment
\usepackage[hang]{footmisc}
\setlength\footnotemargin{8pt}

% Set default figure and table placement
\def\fps@figure{h}
\def\fps@table{h}

% Bibliography configuration
\usepackage[%
    style=authoryear-comp,
    natbib=true,
    isbn=false,
    doi=true,
    dateabbrev=true,
    mergedate=basic,
    backend=biber]{biblatex}
%% Allow bib file to be specied as a relative path from document root.
\ifcsname input@path\endcsname 
  \edef\@basepath{\expandafter\@firstofone\input@path} %remove curly braces
  \def\rm@quotes#1"#2"#3\@nul{\ifx\relax#2\relax #1\else #2\fi} %
  \edef\@basepath{\expandafter\rm@quotes\@basepath""\@nul} %remove quotes
\else\edef\@basepath{./}\fi
%
\let\orig@addbibresource\addbibresource
\renewrobustcmd*{\addbibresource}[2][type=file]{\orig@addbibresource[#1]{\@basepath#2}}

% Load bibliography.
\addbibresource{bibliografia.bib}

% center bibliography section title
\defbibheading{bibliography}[\refname]{%
    \centering\section*{#1}%
    \addcontentsline{toc}{section}{\refname}%
    \markboth{#1}{#1}%
}

% fix bibliography alignment
\setlength{\bibhang}{0pt}
\renewcommand*{\bibfont}{\raggedright}

% Fix bibliography entries

% Fix author names separator.
\renewcommand*{\multinamedelim}{;\space}
\renewcommand*{\finalnamedelim}{;\space}

% Make last author name uppercase
\AtBeginBibliography{\renewcommand{\mkbibnamelast}[1]{\MakeUppercase{#1}}}

% Fix name order to be "last name, name" for all authors.
\DeclareNameAlias{sortname}{last-first}


% Fix strings
\DefineBibliographyStrings{brazilian}{%
  url = {Disponível em\addcolon\addspace},
  pages = {p\adddot},
  in = {Em\addcolon},
  volume  = {vol\adddot},
  number = {n\adddot},
  urlseen = {Acesso em\addcolon\addspace},
}

% Fix urldate
\DeclareFieldFormat{urldate}{%
    \space\bibstring{urlseen}\space%
    \thefield{urlday}\space%
    \mkbibmonth{\thefield{urlmonth}}\space%
    \thefield{urlyear}\adddot}

% Fix Volume
\DeclareFieldFormat*{volume}{\space vol\adddot\addspace{#1}\adddot}

% Fix Number
\DeclareFieldFormat*{number}{\space n\adddot\addspace{#1}\adddot}

% Fix URL (with non-ASCII chars)
\DeclareSourcemap{
  \maps[datatype=bibtex]{
    \map{
      \step[fieldsource=url]
      \step[fieldset=verba, origfieldval]
    }
  }
}
\DeclareFieldFormat*{url}{\space\bibstring{url}<\thefield{verba}>}

% Fix title
\DeclareFieldFormat*{title}{#1}
\DeclareFieldFormat*{subtitle}{\addcolon {#1}}

% Fix order of fields for Books
\DeclareBibliographyDriver{book}{%
  \printnames{author}%
  \newunit\newblock
  \textbf{\printfield{title}}
  \printfield{subtitle}
  \newunit\newblock
  \printlist{publisher}%
  \newunit
  \printlist{location}%
  \newunit
  \printfield{year}%
  \finentry}

% Fix order of fields for Misc
\DeclareBibliographyDriver{misc}{%
  \printnames{author}%
  \newunit\newblock
  \textbf{\printfield{title}}%
  \newunit\newblock
  \textbf{\printlist{publisher}}%
  \newunit
  \printlist{location}%
  \newunit
  \printfield{year}%
  \newunit
  \printfield{url}%
  \newunit
  \printurldate
  \finentry}

% Fix proceedings
\DeclareFieldFormat*{booktitle}{#1}

% fix journal
\DeclareFieldFormat*{journaltitle}{#1}

% Fix order of fields for inprocedings
\DeclareBibliographyDriver{inproceedings}{%
  \printnames{author}%
  \newunit\newblock
  \printfield{title}\adddot\addspace%
  \textbf{\usebibmacro{maintitle+booktitle}}%
  \newunit%
  \printfield{volume}%
  \printfield{number}%
  \newunit\newblock%
  \usebibmacro{chapter+pages}%
  \newunit
  \printlist{address}%
  \newunit
  \printfield{year}%
 \finentry}

% Fix order of fields for article
\DeclareBibliographyDriver{article}{%
  \printnames{author}%
  \newunit\newblock
  \printfield{title}\adddot\addspace%
  \textbf{\usebibmacro{journal}}%
  \newunit%
  \printfield{volume}%
  \printfield{number}%
  \newunit\newblock%
  \usebibmacro{chapter+pages}%
  \newunit
  \printlist{location}%
  \newunit
  \printfield{year}%
 \finentry}
\end_preamble
\use_default_options true
\begin_modules
enumitem
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Provides natbib 1
\end_local_layout
\language brazilian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command biber
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Funcionamento do Sistema
\end_layout

\begin_layout Standard
A partir dos artefatos levantados e documentados no capítulo anterior, criou-se
 uma interface para visualização e consumo de dados do Portal do Aluno SenacRS.
 
\end_layout

\begin_layout Standard
Para chegar no estado atual do projeto e possibilitar o acesso rápido às
 informações do aluno fez-se necessário desenvolver alguns serviços em separado:
 Crawler e API.
 
\end_layout

\begin_layout Subsection
Crawler
\end_layout

\begin_layout Standard
O módulo Crawler é responsável por toda a navegação e extração de dados
 do aluno no Portal do Aluno e pode ser facilmente instalado em qualquer
 aplicação NodeJS com o comando 
\series bold
npm install easyac-crawler
\series default
.
 
\end_layout

\begin_layout Standard
Com as credenciais de acesso do aluno (senha, usuário e unidade) o módulo
 inicia uma instância do Electron a partir do Nightmare, navega até a página
 de login do Portal do Aluno SenacRS, aguarda o carregamento da página,
 preenche os dados de acesso, verifica se o login foi efetuado com sucesso
 testando se há uma mensagem de erro na página e, caso tenha sido um sucesso,
 retorna o valor do cookie de sessão autenticado do aluno.
 É possível ver o processo de forma simplificada no Algoritmo 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Exemplo-de-login"

\end_inset

, onde a entrada são as credenciais e o resultado é o valor do cookie no
 console, ou uma mensagem informando um erro no processo.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemplo de login do módulo easyac-crawler
\begin_inset CommandInset label
LatexCommand label
name "alg:Exemplo-de-login"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Labeling
\labelwidthstring 00.00.0000

const EasyacCrawler  = require('easyac-crawler');
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

const user      = '631420378';
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

const password  = 'senha';
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

const unidade   = 63;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

EasyacCrawler.login(user, password, unidade)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

  .then((cookie) => {
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

    console.log(cookie);
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

  })
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

  .catch((err) => {
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

    console.log('Houve um erro no login: ', err);
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

  });
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A autenticação do aluno é feita diretamente pelo portal do aluno, sem interferên
cia do crawler ou qualquer serviço externo e pode ser observada no Algoritmo
 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Exemplo-de-validação"

\end_inset

, retirado da função de login visível no Algoritmo 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Exemplo-de-login"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemplo de validação do login
\begin_inset CommandInset label
LatexCommand label
name "alg:Exemplo-de-validação"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

yield nightmare
\end_layout

\begin_layout Plain Layout

    .useragent('Mozilla/5.0')
\end_layout

\begin_layout Plain Layout

    .goto('http://apsweb.senacrs.com.br/modulos/aluno')
\end_layout

\begin_layout Plain Layout

    .wait('a')
\end_layout

\begin_layout Plain Layout

    .click('a')
\end_layout

\begin_layout Plain Layout

    .wait(100)
\end_layout

\begin_layout Plain Layout

    .wait('body')
\end_layout

\begin_layout Plain Layout

    .evaluate(function(){
\end_layout

\begin_layout Plain Layout

      oAjax.requester.map(function(el){ el.abort() });
\end_layout

\begin_layout Plain Layout

    })
\end_layout

\begin_layout Plain Layout

    .inject('js', __dirname + '/unidades.js')
\end_layout

\begin_layout Plain Layout

    .select('#lstUnidades', unidade)
\end_layout

\begin_layout Plain Layout

    .type('#usr', username)
\end_layout

\begin_layout Plain Layout

    .type('[name=passwd]', password)
\end_layout

\begin_layout Plain Layout

    .click('#btnEntrar')
\end_layout

\begin_layout Plain Layout

    .wait(function(){
\end_layout

\begin_layout Plain Layout

      var textFailed = document.querySelector('span[style="color:red"]');
\end_layout

\begin_layout Plain Layout

      var loginFailed = textFailed 
\end_layout

\begin_layout Plain Layout

		? textFailed.innerHTML.trim() !== ''
\end_layout

\begin_layout Plain Layout

		: false;
\end_layout

\begin_layout Plain Layout

      var loginSuccess  = document.querySelectorAll('iframe').length;
\end_layout

\begin_layout Plain Layout

      return loginFailed || loginSuccess;
\end_layout

\begin_layout Plain Layout

    });
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ao saber o valor do cookie de sessão do aluno, é possível iniciar o processo
 de extração de dados e, para que a navegação nas próximas páginas esteja
 autenticada, o crawler adiciona um cabeçalho à requisição informando o
 valor da sessão.
 É possível ver no Algoritmo 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Exemplo-de-uso-cookie"

\end_inset

 na chave headers o Cookie sendo informado a partir de um parâmetro.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemplo de uso do Cookie em requisições
\begin_inset CommandInset label
LatexCommand label
name "alg:Exemplo-de-uso-cookie"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Api.getCodigoAluno = function(cookie) {
\end_layout

\begin_layout Plain Layout

  return new Promise(function(resolve, reject){
\end_layout

\begin_layout Plain Layout

    let url = 'http://apsweb.senacrs.com.br/modulos/aluno/index.php5';
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    baseRequest({
\end_layout

\begin_layout Plain Layout

      url: url,
\end_layout

\begin_layout Plain Layout

      method: 'GET',
\end_layout

\begin_layout Plain Layout

      headers: {
\end_layout

\begin_layout Plain Layout

        'Cookie': `PHPSESSID=${cookie};`
\end_layout

\begin_layout Plain Layout

      },
\end_layout

\begin_layout Plain Layout

    }, (err, data, body) => {
\end_layout

\begin_layout Plain Layout

      if(err) reject(err);
\end_layout

\begin_layout Plain Layout

      resolve(Parser.dadosAluno.parse(body));
\end_layout

\begin_layout Plain Layout

    });
\end_layout

\begin_layout Plain Layout

  });
\end_layout

\begin_layout Plain Layout

};
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Quando executada uma chamada ao crawler, o retorno é o código HTML da página
 gerada pelo Portal do Aluno e, para que seja possível trabalhar com os
 valores da página, o código passa por um processo chamado de “Parser”,
 através de uma chamada ao módulo Parser, interno do Crawler, o código HTML
 é analisado e extrai-se as informações relevantes da página.
 O resultado dessa extração é um objeto JSON.
 
\end_layout

\begin_layout Standard
A fim de simplificar o uso do Crawler, foi adicionada uma interface facade
 que retorna uma saída normalizada e com o maior número de informações possível.
 O crawler possui método chamado getTurmas que executa uma série de chamadas
 internas, organizadas de forma a simplificar o processo de extração dos
 dados, sem que o desenvolvedor necessite entender por completo a API do
 crawler.
 O método getTurmas inicia encontrando todas as turmas do aluno, navega
 até a página de notas do aluno, extrai os parâmetros necessários para buscar
 a frequência de todos os semestres, efetua as chamadas buscando todos os
 semestres, normaliza o resultado, transformando-o em uma listagem de turmas
 com suas propriedades, executa chamadas para a página de notas, extrai
 o todas as notas, popula a listagem de turmas com os valores obtidos e,
 por fim, retorna esse objeto normalizado.
 E, caso haja algum erro no processo, é retornada uma exceção.
\end_layout

\begin_layout Subsection
API 
\end_layout

\begin_layout Standard
Além do módulo crawler, foi desenvolvida uma API web com a finalidade de
 tornar acessíveis os dados do aluno, independente da plataforma ou linguagem
 a ser utilizadas.
 A partir do módulo comentado anteriormente, junto ao módulo express, são
 expostos endpoints para login do usuário, leitura de notas e faltas e um,
 que força uma chamada ao crawler, e atualiza as informações a partir do
 portal do aluno em um banco de dados.
\end_layout

\begin_layout Standard
O endpoint de login do aluno espera uma chamada HTTP com o verbo POST e
 o corpo da requisição em formato JSON contendo usuário, senha e unidade
 do aluno.
 Verifica-se se os dados estão preenchidos, e executa-se o método de login
 do Crawler.
 E, caso o usuário seja autenticado com sucesso, o username e a unidade
 do aluno são gravados no banco de dados e gerado um JSON Web Token com
 as informações username e id (autogerado pelo banco).
 O token gerado é enviado como resposta a chamada HTTP.
\end_layout

\begin_layout Standard
O Token retornado é utilizado para autenticar as chamadas subsequentes.
 Caso exista algum aluno com o token, a API entende que ele está autorizado
 a buscar dados referentes a aquele aluno.
 Os dados informados no token são criptografados a partir do algoritmo HMAC-SHA2
56 e uma frase secreta, informada apenas no servidor da API.
\end_layout

\begin_layout Standard
Nos endpoints /faltas e /notas é possível filtrar os resultados a partir
 de dois parâmetros: ano e semestre, ambos aceitam apenas caracteres numéricos
 e inteiros.
 Quando efetuada uma chamada, como demonstrado no Algoritmo 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Exemplo-de-chamada-faltas"

\end_inset

, o retorno é uma listagem das turmas do aluno, no ano e semestre informados
 ou todas e, contendo as informações do total de faltas (Algoritmo 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Exemplo-de-resposta-faltas"

\end_inset

) ou os conceitos obtidos (Algoritmo 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Exemplo-de-resposta-notas"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemplo de chamada HTTP para visualizar faltas
\begin_inset CommandInset label
LatexCommand label
name "alg:Exemplo-de-chamada-faltas"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

TOKEN='eyJhbGciOzI1Ni.eyJVybmFtZSI6IjY.l9Uv28ftU2Jb25E7Ai1-bmUo'
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

curl -X GET 
\backslash

\end_layout

\begin_layout Plain Layout

--header 'Accept: application/json' 
\backslash

\end_layout

\begin_layout Plain Layout

--header 'Authorization: Bearer $TOKEN' 
\backslash

\end_layout

\begin_layout Plain Layout

'https://api.easyac.xyz/faltas?ano=2016&semestre=2'
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemplo de resposta ao endopoint faltas
\begin_inset CommandInset label
LatexCommand label
name "alg:Exemplo-de-resposta-faltas"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[
\end_layout

\begin_layout Plain Layout

  {
\end_layout

\begin_layout Plain Layout

    "cursoId": 365,
\end_layout

\begin_layout Plain Layout

    "ano": 2016,
\end_layout

\begin_layout Plain Layout

    "semestre": 2,
\end_layout

\begin_layout Plain Layout

    "disciplina": "TCC I",
\end_layout

\begin_layout Plain Layout

    "faltas": 8
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemplo de resposta ao endpoint notas 
\begin_inset CommandInset label
LatexCommand label
name "alg:Exemplo-de-resposta-notas"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[
\end_layout

\begin_layout Plain Layout

  {
\end_layout

\begin_layout Plain Layout

    "cursoId": 365,
\end_layout

\begin_layout Plain Layout

    "ano": 2016,
\end_layout

\begin_layout Plain Layout

    "semestre": 1,
\end_layout

\begin_layout Plain Layout

    "disciplina": "Tópicos Avançados em ADS",
\end_layout

\begin_layout Plain Layout

    "conceito": "A",
\end_layout

\begin_layout Plain Layout

    "parciais": [
\end_layout

\begin_layout Plain Layout

      {
\end_layout

\begin_layout Plain Layout

        "descricao": "Proposta de Pesquisa",
\end_layout

\begin_layout Plain Layout

        "ordemParcial": 1,
\end_layout

\begin_layout Plain Layout

        "valorAvaliacaoParcial": "B"
\end_layout

\begin_layout Plain Layout

      },
\end_layout

\begin_layout Plain Layout

      {
\end_layout

\begin_layout Plain Layout

        "descricao": "Realização da Pesquisa e Andamento - Parte1",
\end_layout

\begin_layout Plain Layout

        "ordemParcial": 2,
\end_layout

\begin_layout Plain Layout

        "valorAvaliacaoParcial": "B"
\end_layout

\begin_layout Plain Layout

      },
\end_layout

\begin_layout Plain Layout

      {
\end_layout

\begin_layout Plain Layout

        "descricao": "Realização da Pesquisa e Andamento - Parte2",
\end_layout

\begin_layout Plain Layout

        "ordemParcial": 3,
\end_layout

\begin_layout Plain Layout

        "valorAvaliacaoParcial": "A"
\end_layout

\begin_layout Plain Layout

      },
\end_layout

\begin_layout Plain Layout

      {
\end_layout

\begin_layout Plain Layout

        "descricao": "Seminário com a apresentação final do trabalho",
\end_layout

\begin_layout Plain Layout

        "ordemParcial": 4,
\end_layout

\begin_layout Plain Layout

        "valorAvaliacaoParcial": "A"
\end_layout

\begin_layout Plain Layout

      }
\end_layout

\begin_layout Plain Layout

    ]
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A implementação, como visto no Algoritmo 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Código-da-rota-notas"

\end_inset

, da rota de busca de notas e faltas é muito semelhante, diferindo apenas
 nos campos a serem buscados e o modelo a ser chamado.
 
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Código da rota de listagem de notas
\begin_inset CommandInset label
LatexCommand label
name "alg:Código-da-rota-notas"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

router.get('/', (req, res) => {
\end_layout

\begin_layout Plain Layout

  const token = getToken(req);
\end_layout

\begin_layout Plain Layout

  const payload = jwt.verify(token, Auth.jwtSecret);
\end_layout

\begin_layout Plain Layout

  const queryFalta = { alunoId: payload.id };
\end_layout

\begin_layout Plain Layout

  const filterFields = {
\end_layout

\begin_layout Plain Layout

	alunoId: 0, 
\end_layout

\begin_layout Plain Layout

	_id: 0, __v: 0, 
\end_layout

\begin_layout Plain Layout

	'parciais._id': 0
\end_layout

\begin_layout Plain Layout

  };
\end_layout

\begin_layout Plain Layout

  
\end_layout

\begin_layout Plain Layout

  if(req.query.ano)
\end_layout

\begin_layout Plain Layout

    queryFalta.ano = req.query.ano;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  if(req.query.semestre)
\end_layout

\begin_layout Plain Layout

    queryFalta.semestre = req.query.semestre;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  Nota.find(queryFalta, filterFields, (err, faltas) => {
\end_layout

\begin_layout Plain Layout

    if(err) res.status(400).send(err);
\end_layout

\begin_layout Plain Layout

    res.send(faltas);
\end_layout

\begin_layout Plain Layout

  });
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A API é exposta através da porta 3000 e, como proxy reverso, há um servidor
 web nginx que recebe as requisições via HTTPS e repassa à API.
\end_layout

\begin_layout Subsection
Documentação API
\end_layout

\begin_layout Standard
Complementando a API, foi desenvolvida uma interface web para exibir uma
 documentação de uso da API e uma forma de testar, através do browser, os
 endpoints existentes.
\end_layout

\begin_layout Standard
A documentação é gerada através de um documento no formato .yml de acordo
 com a OpenAPI Specification (Especificação OpenAPI) e, exposta na internet,
 através da porta 80 sendo servida através do mesmo servidor nginx da API.
\end_layout

\end_body
\end_document
